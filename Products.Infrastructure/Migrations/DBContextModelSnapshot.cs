//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
//using Scheduling.Infra.Data.Context;

//namespace Scheduling.Infra.Data.Migrations
//{
//    [DbContext(typeof(DBContext))]
//    partial class DBContextModelSnapshot : ModelSnapshot
//    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "3.1.5")
//                .HasAnnotation("Relational:MaxIdentifierLength", 64);

//            modelBuilder.Entity("Scheduling.Domain.Entities.Scheduling", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    b.Property<string>("Bairro")
//                        .IsRequired()
//                        .HasColumnName("Bairro")
//                        .HasColumnType("varchar(50)")
//                        .HasMaxLength(50);

//                    b.Property<string>("Cep")
//                        .IsRequired()
//                        .HasColumnName("Cep")
//                        .HasColumnType("varchar(10)")
//                        .HasMaxLength(10);

//                    b.Property<string>("Cidade")
//                        .IsRequired()
//                        .HasColumnName("Cidade")
//                        .HasColumnType("varchar(20)")
//                        .HasMaxLength(20);

//                    b.Property<DateTime>("DataHoraFim")
//                        .HasColumnName("DataHoraFim")
//                        .HasColumnType("DateTime");

//                    b.Property<DateTime>("DataHoraInicio")
//                        .HasColumnName("DataHoraInicio")
//                        .HasColumnType("DateTime");

//                    b.Property<DateTime>("DataHoraRegistro")
//                        .HasColumnName("DataHoraRegistro")
//                        .HasColumnType("DateTime");

//                    b.Property<string>("Logradouro")
//                        .IsRequired()
//                        .HasColumnName("Logradouro")
//                        .HasColumnType("varchar(100)")
//                        .HasMaxLength(100);

//                    b.Property<string>("Numero")
//                        .IsRequired()
//                        .HasColumnName("Numero")
//                        .HasColumnType("varchar(20)")
//                        .HasMaxLength(20);

//                    b.Property<string>("Obs")
//                        .HasColumnName("Obs")
//                        .HasColumnType("Text");

//                    b.Property<string>("UF")
//                        .IsRequired()
//                        .HasColumnName("UF")
//                        .HasColumnType("varchar(15)")
//                        .HasMaxLength(15);

//                    b.Property<int>("UserId")
//                        .HasColumnName("UserId")
//                        .HasColumnType("int");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("Schedules");
//                });

//            modelBuilder.Entity("Scheduling.Domain.Entities.User", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    b.Property<string>("Email")
//                        .HasColumnName("Email")
//                        .HasColumnType("varchar(80)")
//                        .HasMaxLength(80);

//                    b.Property<string>("HashPassword")
//                        .IsRequired()
//                        .HasColumnName("HashPassword")
//                        .HasColumnType("varchar(200)")
//                        .HasMaxLength(200);

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnName("Name")
//                        .HasColumnType("varchar(100)")
//                        .HasMaxLength(100);

//                    b.Property<string>("Password")
//                        .IsRequired()
//                        .HasColumnName("Password")
//                        .HasColumnType("varchar(80)")
//                        .HasMaxLength(80);

//                    b.Property<string>("Role")
//                        .IsRequired()
//                        .HasColumnName("Role")
//                        .HasColumnType("varchar(200)")
//                        .HasMaxLength(200);

//                    b.Property<string>("UserName")
//                        .IsRequired()
//                        .HasColumnName("UserName")
//                        .HasColumnType("varchar(20)")
//                        .HasMaxLength(20);

//                    b.HasKey("Id");

//                    b.HasIndex("UserName")
//                        .IsUnique();

//                    b.ToTable("Users");

//                    b.HasData(
//                        new
//                        {
//                            Id = 1,
//                            Email = "admin@admin.com",
//                            HashPassword = "ANKiHtbOQ0DHPNRTFJZVOOxmRS5Nid/Bx3qyaTjzXIsHN0wra+I5cV1scNiDdfokkw==",
//                            Name = "Adminstrador",
//                            Password = "",
//                            Role = "manager",
//                            UserName = "Admin"
//                        },
//                        new
//                        {
//                            Id = 2,
//                            Email = "user@admin.com",
//                            HashPassword = "AC1l+ueW/JpRBi5cXjfd2JmjrXx7/wp9Tgap5MdW2APtEtAiQqDhfRLFh/iGieQqWA==",
//                            Name = "Usuario Padrao",
//                            Password = "",
//                            Role = "employee",
//                            UserName = "User"
//                        });
//                });

//            modelBuilder.Entity("Scheduling.Domain.Entities.Scheduling", b =>
//                {
//                    b.HasOne("Scheduling.Domain.Entities.User", "User")
//                        .WithMany("Schedules")
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
